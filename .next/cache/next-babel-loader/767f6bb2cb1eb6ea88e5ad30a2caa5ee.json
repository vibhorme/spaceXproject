{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nconst FlexContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  padding: ${props => props.padding ? props.padding : 0};\n  margin: ${props => props.margin ? props.margin : 0};\n  justify-content: ${props => props.justifyContent};\n  position: ${props => props.position};\n  left: ${props => props.left};\n  right: ${props => props.right};\n  top: ${props => props.top};\n  overflow ${props => props.overflow ? props.overflow : 'unset'};\n  bottom: ${props => props.bottom};\n  align-content: ${props => props.alignContent};\n  align-items: ${props => props.alignItem};\n  flex-direction: ${props => props.flexDirection};\n  background: ${props => props.background ? props.background : `unset`};\n  flex-wrap: ${props => props.flexWrap};\n  width: ${props => props.width};\n  height: ${props => props.height};\n  ${props => props.blur ? `  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -o-filter: blur(5px);\n  -ms-filter: blur(5px);\n  filter: blur(5px);` : ``}\n  max-width: ${props => props.maxWidth ? `${props.maxWidth}px` : `unset`};\n  min-width: ${props => props.minWidth ? `${props.minWidth}px` : `unset`}\n  min-height: ${props => props.minHeight ? `${props.minHeight}px` : `unset`};\n  border-right: ${props => props.borderRight ? props.borderRight : `unset`};\n  border-bottom: ${props => props.borderBottom ? props.borderBottom : `unset`};\n  cursor: ${props => props.cursor ? props.cursor : `unset`};\n  transform: ${props => props.transform ? props.transform : 'unset'};\n  flex: ${props => props.flexWidth};\n  word-break: ${props => props.wordBreak ? props.wordBreak : 'unset'};\n  z-index: ${props => props.zIndex ? props.zIndex : `unset`};\n  border-radius: ${props => props.borderRadius ? props.borderRadius : `unset`};\n  transition: ${props => props.transition ? props.transition : 'initial'};\n`;\nFlexContainer.defaultProps = {\n  padding: '0',\n  justifyContent: 'flex-start',\n  alignContent: 'center',\n  alignItem: 'center',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  flexWidth: 'none'\n};\n\nconst Flex = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/_jsx(FlexContainer, _objectSpread(_objectSpread({}, props), {}, {\n    padding: props.padding,\n    wordBreak: props.wordBreak,\n    justifyContent: props.justifyContent,\n    flexDirection: props.flexDirection,\n    alignContent: props.alignContent,\n    alignItem: props.alignItem,\n    overflow: props.overflow,\n    borderBottom: props.borderBottom,\n    flexWrap: props.flexWrap,\n    maxWidth: props.maxWidth,\n    borderRight: props.borderRight,\n    borderRadius: props.borderRadius,\n    minWidth: props.minWidth,\n    flexWidth: props.flexWidth,\n    className: props.className,\n    transform: props.transform,\n    onClick: props.onClick,\n    children: children\n  }));\n};\n\nexport default Flex;","map":null,"metadata":{},"sourceType":"module"}