{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport default function useWindowDimensions() {\n  _s();\n\n  var hasWindow = true;\n\n  function getWindowDimensions() {\n    var width = hasWindow ? window.innerWidth : null;\n    var height = hasWindow ? window.innerHeight : null;\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var _useState = useState(getWindowDimensions()),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  function handleResize() {\n    setWindowDimensions(getWindowDimensions());\n  }\n\n  useEffect(function () {\n    if (hasWindow) {\n      handleResize();\n      window.addEventListener('resize', handleResize);\n      return function () {\n        return window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, [hasWindow]);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["/Users/vibhor/Documents/spaceXproject/hooks/useDimensions.tsx"],"names":["useState","useEffect","useWindowDimensions","hasWindow","getWindowDimensions","width","window","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,MAAMC,SAAS,OAAf;;AAEA,WAASC,mBAAT,GAA+B;AAC7B,QAAMC,KAAK,GAAGF,SAAS,GAAGG,MAAM,CAACC,UAAV,GAAuB,IAA9C;AACA,QAAMC,MAAM,GAAGL,SAAS,GAAGG,MAAM,CAACG,WAAV,GAAwB,IAAhD;AACA,WAAO;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELG,MAAAA,MAAM,EAANA;AAFK,KAAP;AAID;;AAV2C,kBAYIR,QAAQ,CACtDI,mBAAmB,EADmC,CAZZ;AAAA,MAYrCM,gBAZqC;AAAA,MAYnBC,mBAZmB;;AAe5C,WAASC,YAAT,GAAwB;AACtBD,IAAAA,mBAAmB,CAACP,mBAAmB,EAApB,CAAnB;AACD;;AAEDH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIE,SAAJ,EAAe;AACbS,MAAAA,YAAY;AAEZN,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,aAAO;AAAA,eAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,OAAP;AACD;AACF,GAPQ,EAON,CAACT,SAAD,CAPM,CAAT;AASA,SAAOO,gBAAP;AACD;;GA7BuBR,mB","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  function handleResize() {\n    setWindowDimensions(getWindowDimensions());\n  }\n\n  useEffect(() => {\n    if (hasWindow) {\n      handleResize();\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}