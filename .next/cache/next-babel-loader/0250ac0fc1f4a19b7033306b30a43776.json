{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vibhor/Documents/spaceXproject/components/Button/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Styled from 'styled-components';\nconst ButtonStyled = Styled.button`\npadding: 5px 15px;\nbackground: ${props => !props.isActive ? '#C5E09B' : ' #7CBA00;'};\nmargin: ${props => props.margin ? props.margin : '0px 0px 15px 0px'};\nwidth: ${props => props.width ? props.width : 'fit-content'};\noutline: none;\ncursor: pointer;\nborder: none;\nborder-radius: 5px;\n :hover {\n   background: #7CBA00;\n }\n \n`;\n\nconst Button = (_ref) => {\n  let {\n    isActive,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isActive\", \"onClick\"]);\n\n  const [isActiveButton, setIsActiveButton] = React.useState(isActive);\n\n  const handleOnClick = () => {\n    setIsActiveButton(!isActiveButton);\n    onClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonStyled, _objectSpread({\n    isActive: isActive,\n    onClick: () => handleOnClick()\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/vibhor/Documents/spaceXproject/components/Button/index.tsx"],"names":["React","Styled","ButtonStyled","button","props","isActive","margin","width","Button","onClick","isActiveButton","setIsActiveButton","useState","handleOnClick"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,MAAMC,YAAY,GAAGD,MAAM,CAACE,MAAoB;AAChD;AACA,cAAeC,KAAD,IAAY,CAACA,KAAK,CAACC,QAAP,GAAkB,SAAlB,GAA8B,WAAa;AACrE,UAAWD,KAAD,IAAYA,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAArB,GAA8B,kBAAoB;AACxE,SAAUF,KAAD,IAAYA,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,aAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAcA,MAAMC,MAA6B,GAAG,UAInB;AAAA,MAJoB;AACrCH,IAAAA,QADqC;AAErCI,IAAAA;AAFqC,GAIpB;AAAA,MADdL,KACc;;AACjB,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCX,KAAK,CAACY,QAAN,CAAeP,QAAf,CAA5C;;AACA,QAAMQ,aAAa,GAAG,MAAM;AAC1BF,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAD,IAAAA,OAAO;AACR,GAHD;;AAKA,sBACE,QAAC,YAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,OAAO,EAAE,MAAMQ,aAAa;AAF9B,KAGMT,KAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;AAoBA,eAAeI,MAAf","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\n\nexport interface ButtonProps {\n  isActive: boolean;\n  onClick: () => void;\n  margin?: string;\n  width?: string;\n}\n\nconst ButtonStyled = Styled.button<ButtonProps>`\npadding: 5px 15px;\nbackground: ${(props) => (!props.isActive ? '#C5E09B' : ' #7CBA00;')};\nmargin: ${(props) => (props.margin ? props.margin : '0px 0px 15px 0px')};\nwidth: ${(props) => (props.width ? props.width : 'fit-content')};\noutline: none;\ncursor: pointer;\nborder: none;\nborder-radius: 5px;\n :hover {\n   background: #7CBA00;\n }\n \n`;\nconst Button: React.FC<ButtonProps> = ({\n  isActive,\n  onClick,\n  ...props\n}: ButtonProps) => {\n  const [isActiveButton, setIsActiveButton] = React.useState(isActive);\n  const handleOnClick = () => {\n    setIsActiveButton(!isActiveButton);\n    onClick();\n  };\n\n  return (\n    <ButtonStyled\n      isActive={isActive}\n      onClick={() => handleOnClick()}\n      {...props}\n    />\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}