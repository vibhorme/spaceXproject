{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\npadding: 5px 15px;\\nbackground: \", \";\\nmargin: 0px 0px 15px 0px;\\noutline: none;\\ncursor: pointer;\\nborder: none;\\nborder-radius: 5px;\\n :hover {\\n   background: #7CBA00;\\n }\\n \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Styled from 'styled-components';\nvar ButtonStyled = Styled.button(_templateObject(), function (props) {\n  return !props.isActive ? '#C5E09B' : ' #7CBA00;';\n});\n\nvar Button = function Button(_ref) {\n  var isActive = _ref.isActive,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"isActive\", \"onClick\"]);\n\n  var _React$useState = React.useState(isActive),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isActiveButton = _React$useState2[0],\n      setIsActiveButton = _React$useState2[1];\n\n  var handleOnClick = function handleOnClick() {\n    setIsActiveButton(!isActiveButton);\n    onClick();\n  };\n\n  return /*#__PURE__*/_jsx(ButtonStyled, _objectSpread({\n    isActive: isActive,\n    onClick: function onClick() {\n      return handleOnClick();\n    }\n  }, props));\n};\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}