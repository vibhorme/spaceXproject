{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vibhor/Documents/spaceXproject/components/Spinner/index.tsx\";\nimport React from 'react';\nimport Styled from 'styled-components';\nconst SpinnerStyled = Styled.div`\n\n  display: inline-block;\n  width: ${props => props.size ? props.size : '18px'};\n  height: ${props => props.size ? props.size : '18px'};\n  border: ${props => props.type === 'primary' ? '3px solid #1B31F9' : '3px solid rgba(255,255,255,.3)'};\n  border-radius: 50%;\n  border-top-color: #fff;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n\n@keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n@-webkit-keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n`;\n\nconst Spinner = ({\n  type,\n  size\n}) => {\n  return /*#__PURE__*/_jsxDEV(SpinnerStyled, {\n    type: type,\n    size: size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Spinner;","map":{"version":3,"sources":["/Users/vibhor/Documents/spaceXproject/components/Spinner/index.tsx"],"names":["React","Styled","SpinnerStyled","div","props","size","type","Spinner"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAMA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAkB;AAC/C;AACA;AACA,WAAYC,KAAD,IAAYA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,MAAQ;AACzD,YAAaD,KAAD,IAAYA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,MAAQ;AAC1D,YAAaD,KAAD,IACRA,KAAK,CAACE,IAAN,KAAe,SAAf,GACI,mBADJ,GAEI,gCAAiC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;;AAuBA,MAAMC,OAA+B,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQD,EAAAA;AAAR,CAAD,KAAkC;AACxE,sBAAO,QAAC,aAAD;AAAe,IAAA,IAAI,EAAEC,IAArB;AAA2B,IAAA,IAAI,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAGA,eAAeE,OAAf","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\n\nexport interface SpinnerProps {\n  type?: 'primary' | 'secondary';\n  size?: string;\n}\nconst SpinnerStyled = Styled.div<SpinnerProps>`\n\n  display: inline-block;\n  width: ${(props) => (props.size ? props.size : '18px')};\n  height: ${(props) => (props.size ? props.size : '18px')};\n  border: ${(props) =>\n    props.type === 'primary'\n      ? '3px solid #1B31F9'\n      : '3px solid rgba(255,255,255,.3)'};\n  border-radius: 50%;\n  border-top-color: #fff;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n\n@keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n@-webkit-keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n`;\n\nconst Spinner: React.FC<SpinnerProps> = ({ type, size }: SpinnerProps) => {\n  return <SpinnerStyled type={type} size={size} />;\n};\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}